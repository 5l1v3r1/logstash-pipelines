input {
    # YOUR INPUT
}

filter {
    json {
        source => "message"
    }
	geoip {
		source => "ClientIP"
		target => "source.geo"
	}

    date {
        match => [ "EdgeStartTimestamp", "yyyy-MM-dd'T'HH:mm:ssZ", "yyyy-MM-dd'T'HH:mm:ss.SSSZ" ]
        timezone => "UTC"
        target => "@timestamp"
    }
    
    date {
        match => [ "EdgeStartTimestamp", "yyyy-MM-dd'T'HH:mm:ssZ", "yyyy-MM-dd'T'HH:mm:ss.SSSZ" ]
        timezone => "UTC"
        target => "[event][end]"
    }

    useragent {
        source => "ClientRequestUserAgent"
        target => "user_agent"
    }

    mutate {
     rename => { "[ClientRequestProtocol]" => "[cloudflare][client][request][protocol]"}
     rename => { "[CacheCacheStatus]" => "[cloudflare][cache][status]"}
     rename => { "[CacheResponseBytes]" => "[cloudflare][cache][response][bytes]"}
     rename => { "[ClientASN]" => "[source][as][number]"}
     rename => { "[ClientCountry]" => "[source][geo][country_iso_code]"}
     rename => { "[ClientDeviceType]" => "[cloudflare][device][type]"}
     copy   => { "[source][address]" => "[source][ip]"}
     copy   => { "[source][address]" => "[client][ip]"}
     copy   => { "[source][address]" => "[client][address]"}
     rename => { "[ClientIP]" => "[source][address]"}
     rename => { "[ClientRequestHost]" => "[url][domain]"}
     copy   => { "[source][port]" => "[client][port]"}
     rename => { "[ClientSrcPort]" => "[source][port]"}
     copy   => { "[cloudflare][edge][server][ip]" => "[observer][ip]"}
     rename => { "[EdgeServerIP]" => "[cloudflare][edge][server][ip]"}
     copy   => { "[server][ip]" => "[destination][ip]"}
     rename => { "[OriginIP]" => "[server][ip]"}
   }
}


output {
    # YOUR OUTPUT
    template => "cloudflare_template.json"
    template_name => "cloudflare"
    template_overwrite => true
}